import sys
import subprocess
import re
from bs4 import BeautifulSoup
import requests
import json

def main():
    serviceList = sys.argv[1:]
    all_exploits = []
    for service in serviceList:
        liste = getExploits(service, 0)
        cves = extractCVE(liste)
        all_exploits.append({service: cves})
    print(json.dumps(all_exploits, indent=4))

def clean_ansi(text: str) -> str:
    ansi_escape = re.compile(r'\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])')
    return ansi_escape.sub('', text)

def getExploits(service: str, version: str = None):
    command = buildCommand(service, version)
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    if result.returncode == 0:
        lines = result.stdout.split("\n")
        liste = list()
        for line in lines[3:]:
            if '|' in line:
                clean_line = clean_ansi(line)
                title, path = clean_line.split("|")
                exploit = {
                    "title": title.strip(),
                    "link": path.strip()
                }
                liste.append(exploit)
        return liste
    else:
        print(result.stderr)
    return []

def extractCVE(liste_object: list):
    cve_list = []
    cve_pattern = re.compile(r'CVE-\d{4}-\d{4,7}')
    for item in liste_object:
        cve_matches = cve_pattern.findall(item["title"])
        cve_list.extend(cve_matches)
    return list(set(cve_list))

def getPage(url: str):
    response = requests.get(url)
    return response.text

def buildCommand(service: str, version: str):
    return f"searchsploit {service} {version} -w" if version != 0 else f"searchsploit {service} -w"
    
if __name__ == "__main__":
    main()